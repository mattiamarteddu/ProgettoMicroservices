version: '3'

services:

  #Book Microservices#
  book:
    #build:
     # context: ./microLibro/microLibro
    image: mattiamarteddu/microbooks:1.0
    container_name: book
    #command: python microLibro/manage.py runserver 0.0.0.0:8000
    #volumes:
     # - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - dbBook
  #DB Book Microservices#
  dbBook:
    container_name: BookDb
    image: nouchka/sqlite3:latest
    stdin_open: true
    tty: true
    volumes:
      - ./db/:/root/db/
    ports:
      - "3308:3306"



  #Customer Microservices#
  customer:
    #build:
      #context: ./microCustomer/microCustomer
    image: mattiamarteddu/microcustomers:1.0
    container_name: customer
    #command: python microCustomer/manage.py runserver 0.0.0.0:8000
    #volumes:
     # - .:/code
    ports:
      - "8001:8000"
    depends_on:
      - dbCustomer
  #DB Customer Microservices#
  dbCustomer:
    container_name: CustomerDb
    image: nouchka/sqlite3:latest
    stdin_open: true
    tty: true
    volumes:
      - ./db/:/root/db/
    ports:
      - "3309:3306"



  #Borrowing Microservices#
  borrowing:
    #build:
      #context: ./microBorrowing/microBorrowing
    image: mattiamarteddu/microborrowings:1.0
    container_name: borrowing
    #command: python microBorrowing/manage.py runserver 0.0.0.0:8000
    #volumes:
     # - .:/code
    ports:
      - "8002:8000"
    depends_on:
      - dbBorrowing
  #DB Borrowing Microservices#
  dbBorrowing:
    image: postgres:latest
    container_name: borrowingDb
    ports:
        - "5433:5432"
    volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./microBorrowing/microBorrowing/dbinit.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres


volumes:
  postgres_data: { }


#

